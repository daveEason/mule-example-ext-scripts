/*
 * Generated by the Mule project wizard. http://mule.mulesoft.org
 *
 * The software in this package is published under the terms of the CPAL v1.0
 * license, a copy of which has been included with this distribution in the
 * LICENSE.txt file.
 */
package com.mulesoft.example.muleexampleextscripts;

import org.mule.api.MuleMessage;
import org.mule.api.client.MuleClient;
import org.mule.tck.junit4.FunctionalTestCase;
import org.mule.transport.NullPayload;

import org.junit.Test;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;

public class MuleexampleextscriptsTestCase extends FunctionalTestCase
{
    protected String getConfigResources()
    {
        return "mule-config.xml";
    }

    @Test
    public void muleexampleextscripts() throws Exception
    {
        String dateString;
        Process process;
        MuleClient client = muleContext.getClient();
        MuleMessage result = client.send("cxf:http://localhost:1082/fileService?method=listDate", null, null);
        assertNotNull(result);
        assertNull(result.getExceptionPayload());
        assertFalse(result.getPayload() instanceof NullPayload);

        // Execute Unix 'date' command for comparison with result string
        process = new ProcessBuilder("date").start();
        InputStream is = process.getInputStream();
        InputStreamReader isr = new InputStreamReader(is);
        BufferedReader br = new BufferedReader(isr);

        dateString = br.readLine();

        //Assert the correct data has been received
        assertEquals(dateString.substring(0,13), result.getPayloadAsString().substring(0,13));
    }
}
